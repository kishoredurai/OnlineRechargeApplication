// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineRechargeApplication.Data;

#nullable disable

namespace OnlineRechargeApplication.Migrations
{
    [DbContext(typeof(OnlineRechargeApplicationContext))]
    [Migration("20230424155122_update customer table")]
    partial class updatecustomertable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OnlineRechargeApplication.Models.AdminModel", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("AdminModel");
                });

            modelBuilder.Entity("OnlineRechargeApplication.Models.CustomerModel", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<int>("CountryCode")
                        .HasColumnType("int");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerPhone")
                        .HasColumnType("int");

                    b.Property<int>("ServiceProviderId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("ServiceProviderId");

                    b.ToTable("CustomerModel");
                });

            modelBuilder.Entity("OnlineRechargeApplication.Models.PlanModel", b =>
                {
                    b.Property<int>("planId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("planId"), 1L, 1);

                    b.Property<int>("ServiceProviderId")
                        .HasColumnType("int");

                    b.Property<string>("planDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("planName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("planPrice")
                        .HasColumnType("int");

                    b.Property<int>("planValidity")
                        .HasColumnType("int");

                    b.HasKey("planId");

                    b.HasIndex("ServiceProviderId");

                    b.ToTable("PlanModel");
                });

            modelBuilder.Entity("OnlineRechargeApplication.Models.SelectedPlanModel", b =>
                {
                    b.Property<int>("SelectedPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SelectedPlanId"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("planId")
                        .HasColumnType("int");

                    b.HasKey("SelectedPlanId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("planId");

                    b.ToTable("SelectedPlanModel");
                });

            modelBuilder.Entity("OnlineRechargeApplication.Models.ServiceProviderModel", b =>
                {
                    b.Property<int>("ServiceProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceProviderId"), 1L, 1);

                    b.Property<string>("ServiceProviderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceProviderId");

                    b.ToTable("ServiceProviderModel");
                });

            modelBuilder.Entity("OnlineRechargeApplication.Models.CustomerModel", b =>
                {
                    b.HasOne("OnlineRechargeApplication.Models.ServiceProviderModel", "ServiceProvider")
                        .WithMany()
                        .HasForeignKey("ServiceProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceProvider");
                });

            modelBuilder.Entity("OnlineRechargeApplication.Models.PlanModel", b =>
                {
                    b.HasOne("OnlineRechargeApplication.Models.ServiceProviderModel", "ServiceProvider")
                        .WithMany()
                        .HasForeignKey("ServiceProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceProvider");
                });

            modelBuilder.Entity("OnlineRechargeApplication.Models.SelectedPlanModel", b =>
                {
                    b.HasOne("OnlineRechargeApplication.Models.CustomerModel", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineRechargeApplication.Models.PlanModel", "Plan")
                        .WithMany()
                        .HasForeignKey("planId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Plan");
                });
#pragma warning restore 612, 618
        }
    }
}
